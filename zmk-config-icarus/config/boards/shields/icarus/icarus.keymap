#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    tapping-term-ms = <250>;
    flavor = "tap-preferred";
};
&sk {
     release-after-ms = <2000>;
     quick-release;
};
&caps_word {
    continue-list = <UNDERSCORE BACKSPACE DELETE MINUS>;
};

/* Basic Definition */
#define rpt  key_repeat
#define CPY  LG(C)
#define CUT  LG(X)
#define PST  LG(V)
#define FPST LG(LA(V))   // Finder cut-paste file

/* Layers */
#define DEF 0
#define SYM 1
#define NAV 2	
#define MSE 3
#define BLT 4
#define FUN 5
/ { 
    combos {
        compatible = "zmk,combos";
        combo_sqt     { timeout-ms = <175>; key-positions = < 8  9>; bindings = <&kp SQT>; layers = <DEF>; };
        combo_caps    { timeout-ms = <175>; key-positions = < 4  5>; bindings = <&caps_word>; };
        combo_shft_l  { timeout-ms = <175>; key-positions = <13 14>; bindings = <&sk LSHFT>; };
        combo_shft_r  { timeout-ms = <175>; key-positions = <15 16>; bindings = <&sk LSHFT>; };
        combo_dot     { timeout-ms = <175>; key-positions = <16 17>; bindings = <&kp DOT>; layers = <SYM>; };
        combo_comma   { timeout-ms = <175>; key-positions = <17 18>; bindings = <&kp COMMA>; layers = <SYM>; };
        combo_numlock { timeout-ms = <175>; key-positions = <13 22>; bindings = <&kp KP_NUM>; layers = <NAV>; };
        combo_bspc_l  { timeout-ms = <175>; key-positions = < 3 14>; bindings = <&kp BSPC>; };
        combo_bspc_r  { timeout-ms = <175>; key-positions = < 6 15>; bindings = <&kp BSPC>; };
        combo_del_l   { timeout-ms = <175>; key-positions = < 4 13>; bindings = <&kp DEL>; };
        combo_del_r   { timeout-ms = <175>; key-positions = < 5 16>; bindings = <&kp DEL>; };
        combo_entr_l  { timeout-ms = <175>; key-positions = <21 22>; bindings = <&kp RETURN>; };
        combo_entr_r  { timeout-ms = <175>; key-positions = <23 24>; bindings = <&kp RETURN>; };
        combo_esc_l   { timeout-ms = <175>; key-positions = < 3 13>; bindings = <&kp ESC>; };
        combo_esc_r   { timeout-ms = <175>; key-positions = < 6 16>; bindings = <&kp ESC>; };

        combo_ptab    { timeout-ms = <175>; key-positions = <11 12>; bindings = <&kp LG(LBRC)>; layers = <MSE>; };
        combo_ntab    { timeout-ms = <175>; key-positions = <12 13>; bindings = <&kp RG(RBRC)>; layers = <MSE>; };
        combo_bck     { timeout-ms = <175>; key-positions = <20 21>; bindings = <&kp LG(LBKT)>; layers = <MSE>; };
        // combo_fwd     { timeout-ms = <175>; key-positions = <21 22>; bindings = <&kp RG(RBKT)>; layers = <MSE>; }; 
        
        combo_play    { timeout-ms = <175>; key-positions = < 2  3>; bindings = <&kp C_PP>; layers = <NAV MSE>; };
        
        combo_MSE_l   { timeout-ms = <175>; key-positions = < 1  2  3>; bindings = <&tog MSE>; };
        combo_NAV_r   { timeout-ms = <175>; key-positions = < 6  7  8>; bindings = <&tog NAV>; };
        combo_SYM_l   { timeout-ms = <175>; key-positions = < 2  3  4>; bindings = <&tog SYM>; };
        combo_SYM_r   { timeout-ms = <175>; key-positions = < 5  6  7>; bindings = <&tog SYM>; };
        combo_tab_l   { timeout-ms = <175>; key-positions = < 2  3 10>; bindings = <&kp TAB>; };
        combo_tab_r   { timeout-ms = <175>; key-positions = < 6  7 19>; bindings = <&kp TAB>; };
        combo_meh_r   { timeout-ms = <175>; key-positions = <20 21 22>; bindings = <&sk LC(LS(LALT))>; };
        combo_meh_l   { timeout-ms = <175>; key-positions = <23 24 25>; bindings = <&sk LC(LS(LALT))>; };
    };

    behaviors {
        mod: mods {
            compatible = "zmk,behavior-hold-tap";
            label = "MODS_L";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        lyr: layers {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERS_R";
            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <190>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    /*             KEY POSITIONS
    ┌────────────────────┐ ┌────────────────────┐
    │ 00  01  02  03  04 │ │ 05  06  07  08  09 │
    │ 10  11  12  13  14 │ │ 15  16  17  18  19 │
    │     20  21  22     │ │     23  24  25     │
    │             26  27 │ │ 28  29             │
    └────────────────────┘ └────────────────────┘ */

    keymap {
        compatible = "zmk,keymap";

        def {
            bindings = <
            &kp V  &mod LCTL M  &mod LALT K  &mod LGUI P   &lyr BLT Y  /**/  &lyr BLT Z    &mod RGUI B   &mod RALT DOT  &mod RCTL SEMI  &lyr FUN COMMA
            &kp S  &kp R        &kp T        &kp C         &kp W       /**/  &kp Q         &kp N         &kp A          &kp E           &kp I
                   &kp L        &kp D        &kp F                     /**/                &kp H         &kp O          &kp U
                                             &mod LSHFT X  &lyr SYM G  /**/  &lyr NAV SPC  &mod RSHFT J
            >;
        };

        sym {
            bindings = <
            &kp LSHFT  &mod LCTL GRAVE  &mod LALT LBKT  &mod LGUI RBKT  &kp QMARK  /**/  &kp PLUS   &kp N7  &kp N8  &kp N9  &kp FSLH
            &kp LALT   &kp TILDE        &kp LPAR        &kp RPAR        &kp UNDER  /**/  &kp MINUS  &kp N4  &kp N5  &kp N6  &kp EQUAL
                       &kp BSLH         &kp PIPE        &kp FSLH                   /**/             &kp N1  &kp N2  &kp N3
                                                        &kp LGUI        &none      /**/  &kp SPC    &kp N0
            >;
        };

        nav {
            bindings = <
            &kp LSHFT  &kp C_MUTE    &kp C_PREV    &kp C_NEXT    &td CUT CPY   /**/  &kp TAB   &kp PG_UP  &kp UP    &kp DEL    &kp RSHFT
            &kp LALT   &kp C_VOL_UP  &kp LG(LBRC)  &kp RG(RBRC)  &td FPST PST  /**/  &kp SPC   &kp LEFT   &kp DOWN  &kp RIGHT  &kp RALT
                       &kp C_VOL_DN  &kp LG(LBKT)  &kp RG(RBKT)                /**/            &kp PG_DN  &kp HOME  &kp END
                                                   &kp LGUI      &rpt          /**/  &none     &sk RGUI
            >;
        };

        mse {
            bindings = <
            &kp LSHFT  &kp C_MUTE    &kp C_PREV    &kp C_NEXT    &td CUT CPY   /**/  &kp TAB   &kp PG_UP  &kp SPC   &kp DEL    &kp RSHFT
            &kp LALT   &mkp MB3      &mkp MB2      &mkp MB1      &td FPST PST  /**/  &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT  &kp RALT
                       &mkp MB6      &mkp MB5      &mkp MB4                    /**/            &kp PG_DN  &kp HOME  &kp END
                                                   &kp LGUI      &rpt          /**/  &none     &sk RGUI
            >;
        };

        ble {
            bindings = <
            &out OUT_TOG  &reset  &bt BT_CLR  &none        &none  /**/  &none  &none        &bt BT_CLR  &reset  &out OUT_TOG
            &none         &none   &none       &bootloader  &none  /**/  &none  &bootloader  &none       &none       &none
                          &none   &none       &none               /**/         &none        &none       &none
                                              &none        &none  /**/  &none  &none
            >;
        };

        fun {
            bindings = <
            &none  &none  &none  &none  &none  /**/  &none  &kp F7  &kp F8  &kp F9  &none
            &none  &none  &none  &none  &none  /**/  &none  &kp F4  &kp F5  &kp F6  &kp F10
                   &none  &none  &none         /**/         &kp F1  &kp F2  &kp F3
                                 &none  &none  /**/  &kp F12  &kp F11
            >;
        };
    };
};
